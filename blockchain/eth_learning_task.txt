入门引导
https://blog.csdn.net/wo541075754/article/details/77619533
官方文档
https://github.com/ethereum/go-ethereum/wiki

安装教程
https://blog.csdn.net/chenyufeng1991/article/details/53454228

其中pip install eth-testrpc
命令报错 xxx egg_什么的，解决方案：
换成：
npm install -g ethereumjs-testrpc


truffle migrate Error: No network specified
https://blog.csdn.net/wo541075754/article/details/78761513

启动方式
geth  --identity "bajian_eth"  --datadir privChain/  --nodiscover  --rpc --rpcport "8555"  --rpccorsdomain "*"  --port "30303" --rpcapi "personal,miner,db,eth,net,web3" --syncmode "fast"   console 2>>geth.log


中文译文开发文档推荐
https://blog.csdn.net/qq_28114645/article/details/78801662

目前学习到的合约调用的方法是
web3.eth.contract(abi).at(contracts_address)
生成实例，然后就可以查询余额，转币等
如下方法可以查看abi
https://etherscan.io/address/0xae66d00496aaa25418f829140bb259163c06986e#code

https://lab.miguelmota.com/ethereum-input-data-decoder/example/ -- 在线解析input数据
https://github.com/ConsenSys/abi-decoder -- 一个解析input数据的js库

tx解析代币transfer：
https://www.jianshu.com/p/a885224e10c2
//js-web-skills/blockchain/eth_test/web3 内含web3.js相关操作api

私链代币合约地址记录
0x2566ae3a970accc755e02a75db501cd3424633de
0x88a2bd4b83b998f2da124095b9951b9ef5aaacd1
转账token 的txid 0x5b5a7a6aa51eb534d440438a16e7db5d2b6eaeb4ca01af20a39a82f4e35401b4，fullhash=0xc228107feeeea768a650c08f7689d5b981a6e2ac11cdb363ea85a1caafe8be89 recipient=0x88a2bd4b83b998F2dA124095b9951b9ef5AaaCD1（"0xd263ba525f1b7cc851716b495484f49dfba33d93","2000000000000000000000000"）

1、确认数这样计算：
var blockNum = web3.eth.blockNumber;
var confirmations = blockNum - 243;//当前区块号-交易所在区块号，即为交易确认数
2、交易时间，交易数据中没有时间，只能以交易数据所在区块的时间

在线钱包api
https://infura.io/setup?key=gsp3CCkZS6MxsrUYKe1W
https://mainnet.infura.io/gsp3CCkZS6MxsrUYKe1W

geth参数大全
https://blog.csdn.net/xilibi2003/article/details/78662000

常用命令

eth.syncing
{
  currentBlock: 2966162,
  highestBlock: 3129529,
  knownStates: 6913290,
  pulledStates: 6911179,
  startingBlock: 2954270
}

踩坑：
"1000000000","bajian_token","8","BBB"
0xBDB1844C801181cb19CB1A1f7e6d7B89F77105ED

创建代币的合约 "888888888","bajian_token","8","BJT"
我的私链合约,888888800000000
0xa8db29ea795decaf3d7ff3811781c6d81acb04ea

pragma solidity ^0.4.16;
contract Token{
    uint256 public totalSupply;

    function balanceOf(address _owner) public constant returns (uint256 balance);
    function transfer(address _to, uint256 _value) public returns (bool success);
    function transferFrom(address _from, address _to, uint256 _value) public returns   
    (bool success);

    function approve(address _spender, uint256 _value) public returns (bool success);

    function allowance(address _owner, address _spender) public constant returns 
    (uint256 remaining);

    event Transfer(address indexed _from, address indexed _to, uint256 _value);
    event Approval(address indexed _owner, address indexed _spender, uint256 
    _value);
}

contract TokenDemo is Token {

    string public name;                   //名称，例如"My test token"
    uint8 public decimals;               //返回token使用的小数点后几位。比如如果设置为3，就是支持0.001表示.
    string public symbol;               //token简称,like MTT

    function TokenDemo(uint256 _initialAmount, string _tokenName, uint8 _decimalUnits, string _tokenSymbol) public {
        totalSupply = _initialAmount * 10 ** uint256(_decimalUnits);         // 设置初始总量
        balances[msg.sender] = totalSupply; // 初始token数量给予消息发送者，因为是构造函数，所以这里也是合约的创建者

        name = _tokenName;                   
        decimals = _decimalUnits;          
        symbol = _tokenSymbol;
    }

    function transfer(address _to, uint256 _value) public returns (bool success) {
        //默认totalSupply 不会超过最大值 (2^256 - 1).
        //如果随着时间的推移将会有新的token生成，则可以用下面这句避免溢出的异常
        require(balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]);
        require(_to != 0x0);
        balances[msg.sender] -= _value;//从消息发送者账户中减去token数量_value
        balances[_to] += _value;//往接收账户增加token数量_value
        Transfer(msg.sender, _to, _value);//触发转币交易事件
        return true;
    }


    function transferFrom(address _from, address _to, uint256 _value) public returns 
    (bool success) {
        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);
        balances[_to] += _value;//接收账户增加token数量_value
        balances[_from] -= _value; //支出账户_from减去token数量_value
        allowed[_from][msg.sender] -= _value;//消息发送者可以从账户_from中转出的数量减少_value
        Transfer(_from, _to, _value);//触发转币交易事件
        return true;
    }
    function balanceOf(address _owner) public constant returns (uint256 balance) {
        return balances[_owner];
    }


    function approve(address _spender, uint256 _value) public returns (bool success)   
    { 
        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
        return true;
    }

    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {
        return allowed[_owner][_spender];//允许_spender从_owner中转出的token数
    }
    mapping (address => uint256) balances;
    mapping (address => mapping (address => uint256)) allowed;
}


Remix下使用合约 的教程
https://ethfans.org/ajian1984/articles/868




ropsten测试链：
0x1a1394afe7778b134f9dc17e4904febfae29db5d
b9c2e899cce17b8e216513a6ff2521e735d9d9d9164334b467a646fefd68b802
代币合约地址
0x548278e9fffa2183b3b64bdebede8970baad3213
abi
[
    {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
            {
                "name": "",
                "type": "string"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_spender",
                "type": "address"
            },
            {
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "approve",
        "outputs": [
            {
                "name": "success",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_from",
                "type": "address"
            },
            {
                "name": "_to",
                "type": "address"
            },
            {
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "transferFrom",
        "outputs": [
            {
                "name": "success",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "",
                "type": "address"
            }
        ],
        "name": "balances",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
            {
                "name": "",
                "type": "uint8"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "",
                "type": "address"
            },
            {
                "name": "",
                "type": "address"
            }
        ],
        "name": "allowed",
        "outputs": [
            {
                "name": "",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "_owner",
                "type": "address"
            }
        ],
        "name": "balanceOf",
        "outputs": [
            {
                "name": "balance",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
            {
                "name": "",
                "type": "string"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": false,
        "inputs": [
            {
                "name": "_to",
                "type": "address"
            },
            {
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "transfer",
        "outputs": [
            {
                "name": "success",
                "type": "bool"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "constant": true,
        "inputs": [
            {
                "name": "_owner",
                "type": "address"
            },
            {
                "name": "_spender",
                "type": "address"
            }
        ],
        "name": "allowance",
        "outputs": [
            {
                "name": "remaining",
                "type": "uint256"
            }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "name": "_initialAmount",
                "type": "uint256"
            },
            {
                "name": "_tokenName",
                "type": "string"
            },
            {
                "name": "_decimalUnits",
                "type": "uint8"
            },
            {
                "name": "_tokenSymbol",
                "type": "string"
            }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "name": "_from",
                "type": "address"
            },
            {
                "indexed": true,
                "name": "_to",
                "type": "address"
            },
            {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "Transfer",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "name": "_owner",
                "type": "address"
            },
            {
                "indexed": true,
                "name": "_spender",
                "type": "address"
            },
            {
                "indexed": false,
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "Approval",
        "type": "event"
    }
]



